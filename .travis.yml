language: c
os: linux

jobs:
  include:
    - stage: build
      name: "Compile source with build tools with DHT11 for ESP32"
      services:
        - docker
      before_install:
        - docker pull espressif/idf
      script:
        - git clone https://github.com/Kanaderu/esp-idf-lib $HOME/esp-idf-lib
        - echo "CONFIG_DHT11_SENSOR_ENABLED=y" >> sdkconfig.defaults
        - echo "CONFIG_CAMERA_SENSOR_ENABLED=y" >> sdkconfig.defaults
        - echo "CONFIG_CAMERA_MODEL_HUZZAH32=y" >> sdkconfig.defaults
        - >
          docker run --rm
          -e LC_ALL=C.UTF-8
          -e IDF_LIB_PATH=/esp-lib
          -v $HOME/esp-idf-lib:/esp-lib
          -v $PWD:/project
          -w /project
          espressif/idf idf.py set-target esp32
        - >
          docker run --rm
          -e LC_ALL=C.UTF-8
          -e IDF_LIB_PATH=/esp-lib
          -v $HOME/esp-idf-lib:/esp-lib
          -v $PWD:/project
          -w /project
          espressif/idf idf.py -p /dev/ttyUSB0 build
     # TODO: Add BME680 test, fix linker to i2cdev
#    - name: "Compile source with build tools with BME680 for ESP32"
#      services:
#        - docker
#      before_install:
#        - docker pull espressif/idf
#      script:
#        - git clone https://github.com/Kanaderu/esp-idf-lib $HOME/esp-idf-lib
#        - echo "CONFIG_BME680_SENSOR_ENABLED=y" >> sdkconfig.defaults
#        - echo "CONFIG_CAMERA_SENSOR_ENABLED=y" >> sdkconfig.defaults
#        - echo "CONFIG_CAMERA_MODEL_HUZZAH32=y" >> sdkconfig.defaults
#        - >
#          docker run --rm
#          -e LC_ALL=C.UTF-8
#          -e IDF_LIB_PATH=/esp-lib
#          -v $HOME/esp-idf-lib:/esp-lib
#          -v $PWD:/project
#          -w /project
#          espressif/idf idf.py set-target esp32
#        - >
#          docker run --rm
#          -e LC_ALL=C.UTF-8
#          -e IDF_LIB_PATH=/esp-lib
#          -v $HOME/esp-idf-lib:/esp-lib
#          -v $PWD:/project
#          -w /project
#          espressif/idf idf.py -p /dev/ttyUSB0 build

    - stage: deployment
      name: "Deploy GitHub Pages Documentation"
      if: branch = master # run job only on master
      language: node_js
      node_js:
        - 12
      before_script:
        - cd docs/
        - yarn install
      script:
        - yarn run deploy
      deploy:
        provider: pages
        skip_cleanup: true
        github_token: $GITHUB_TOKEN
        local_dir: docs/public
        on:
          branch: master

notifications:
  slack:
    secure: dRLWjbtycg5vC55vn733YUHsbldyplYVheFpS3XZ0DHgsbRoeITZ1tN8uLFptr8boqiIOwnhgwV7xRwb6LdB4ZsrHzQ3F/t5cElb0yJ1LMTbzeKYXiOb3gLiORYYIjRoUlCA4VkmTJ+P6EMAA7t+bz6uKMKm9qprVub+T/E2mD4SStMOqw4AekFrlbzNyeB6dp6lFS9BKNH1i2mbJAkrGVGz9TM/Hc3KTfd21QzRMBcnQd1UkL/SgSqrqkF7qe8y6EnXzIOHo6RuCXPAhqty4w9M6qQ/ksww7VmlWKBsLnaDK73B+/Q4aIL+H3b1+phAVdqeChWiA58eXmJJHBPSWrp5bg+1QeaCRHP6q4GRykSiWCrGX/+8KvdbLABnvGGQhkQ2hXh7Zd57tAi7xqgRSsYRzP6NrY3mjv4dw9LSUtG6/snQAmfDAFdvWBhVk9ilQXKDpyR2ogQotUO1Uv0g5Syctb2oqJlO/WpBnRMnataHxcbM+hrAUORDisWPZLYeTGm8xebXrSCKtEkoGQ0fJZ1FqVw7jkUnLuyTeIVzd45cVpZzRdctNEy347SYUy0okxvDUV1gnUENUxjyeAQQjyFLIW5CNozS7qXT5N4TYVZ/SHrwfWHBzLrYu+qVONI5DcNAN/1+PivGS9b7mlNh29/EWuiSUn1oOHzvZecQEU8=
